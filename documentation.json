{
    "pipes": [
        {
            "name": "TypeColorPipe",
            "id": "pipe-TypeColorPipe-f82c68b6f4eca52ab21497954112eb2e",
            "file": "src/app/shared/pipe/type-color.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "typeColor",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport {Settings} from '../../settings';\n\n@Pipe({\n  name: 'typeColor'\n})\nexport class TypeColorPipe implements PipeTransform {\n\n  transform(value: string): unknown {\n    return Settings.colours[value] || '#777';\n  }\n\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "OtherSprites",
            "id": "interface-OtherSprites-9537eeeb6eb6bd549aa312f3bae74888",
            "file": "src/app/shared/model/pokemon.ts",
            "type": "interface",
            "sourceCode": "import {StatInfo} from './stat';\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  sprites: Sprites;\n  stats: StatInfo[];\n  types: TypeInfo[];\n  weight: number;\n}\n\nexport interface Sprites {\n  back_default: string;\n  back_female: string;\n  back_shiny: string;\n  back_shiny_female: string;\n  front_default: string;\n  front_female: string;\n  front_shiny: string;\n  front_shiny_female: string;\n  other: {\n    dream_world: OtherSprites,\n    'official-artwork': OtherSprites\n  };\n  versions: any;\n}\n\nexport interface OtherSprites {\n  front_default: string;\n  front_female?: string;\n}\n\nexport interface Type {\n  name: string;\n  url: string;\n}\n\nexport interface TypeInfo {\n  slot: number;\n  type: Type;\n}\n",
            "properties": [
                {
                    "name": "front_default",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "front_female",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Page",
            "id": "interface-Page-d5e5959435731529cba083979c4175a1",
            "file": "src/app/shared/model/pagination.ts",
            "type": "interface",
            "sourceCode": "export interface Pagination {\n  count?: number;\n  page?: number;\n  limit?: number;\n  offset?: number;\n  next?: string;\n  previous?: string;\n  url?: string;\n}\n\nexport interface Page {\n  url?: string;\n  pagination?: Pagination;\n}\n",
            "properties": [
                {
                    "name": "pagination",
                    "type": "Pagination",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Pagination",
            "id": "interface-Pagination-d5e5959435731529cba083979c4175a1",
            "file": "src/app/shared/model/pagination.ts",
            "type": "interface",
            "sourceCode": "export interface Pagination {\n  count?: number;\n  page?: number;\n  limit?: number;\n  offset?: number;\n  next?: string;\n  previous?: string;\n  url?: string;\n}\n\nexport interface Page {\n  url?: string;\n  pagination?: Pagination;\n}\n",
            "properties": [
                {
                    "name": "count",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "limit",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "next",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "offset",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "page",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "previous",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Pokemon",
            "id": "interface-Pokemon-9537eeeb6eb6bd549aa312f3bae74888",
            "file": "src/app/shared/model/pokemon.ts",
            "type": "interface",
            "sourceCode": "import {StatInfo} from './stat';\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  sprites: Sprites;\n  stats: StatInfo[];\n  types: TypeInfo[];\n  weight: number;\n}\n\nexport interface Sprites {\n  back_default: string;\n  back_female: string;\n  back_shiny: string;\n  back_shiny_female: string;\n  front_default: string;\n  front_female: string;\n  front_shiny: string;\n  front_shiny_female: string;\n  other: {\n    dream_world: OtherSprites,\n    'official-artwork': OtherSprites\n  };\n  versions: any;\n}\n\nexport interface OtherSprites {\n  front_default: string;\n  front_female?: string;\n}\n\nexport interface Type {\n  name: string;\n  url: string;\n}\n\nexport interface TypeInfo {\n  slot: number;\n  type: Type;\n}\n",
            "properties": [
                {
                    "name": "height",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "order",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "sprites",
                    "type": "Sprites",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "stats",
                    "type": "StatInfo[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "types",
                    "type": "TypeInfo[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "weight",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Sprites",
            "id": "interface-Sprites-9537eeeb6eb6bd549aa312f3bae74888",
            "file": "src/app/shared/model/pokemon.ts",
            "type": "interface",
            "sourceCode": "import {StatInfo} from './stat';\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  sprites: Sprites;\n  stats: StatInfo[];\n  types: TypeInfo[];\n  weight: number;\n}\n\nexport interface Sprites {\n  back_default: string;\n  back_female: string;\n  back_shiny: string;\n  back_shiny_female: string;\n  front_default: string;\n  front_female: string;\n  front_shiny: string;\n  front_shiny_female: string;\n  other: {\n    dream_world: OtherSprites,\n    'official-artwork': OtherSprites\n  };\n  versions: any;\n}\n\nexport interface OtherSprites {\n  front_default: string;\n  front_female?: string;\n}\n\nexport interface Type {\n  name: string;\n  url: string;\n}\n\nexport interface TypeInfo {\n  slot: number;\n  type: Type;\n}\n",
            "properties": [
                {
                    "name": "back_default",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "back_female",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "back_shiny",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "back_shiny_female",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "front_default",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "front_female",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "front_shiny",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "front_shiny_female",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "other",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "versions",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Stat",
            "id": "interface-Stat-8cccd880149e668eea4c13143080c001",
            "file": "src/app/shared/model/stat.ts",
            "type": "interface",
            "sourceCode": "export interface StatInfo {\n  base_stat: number;\n  effort: number;\n  stat: Stat;\n}\n\nexport interface Stat {\n  name: string;\n  url: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "StatInfo",
            "id": "interface-StatInfo-8cccd880149e668eea4c13143080c001",
            "file": "src/app/shared/model/stat.ts",
            "type": "interface",
            "sourceCode": "export interface StatInfo {\n  base_stat: number;\n  effort: number;\n  stat: Stat;\n}\n\nexport interface Stat {\n  name: string;\n  url: string;\n}\n",
            "properties": [
                {
                    "name": "base_stat",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "effort",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "stat",
                    "type": "Stat",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Type",
            "id": "interface-Type-9537eeeb6eb6bd549aa312f3bae74888",
            "file": "src/app/shared/model/pokemon.ts",
            "type": "interface",
            "sourceCode": "import {StatInfo} from './stat';\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  sprites: Sprites;\n  stats: StatInfo[];\n  types: TypeInfo[];\n  weight: number;\n}\n\nexport interface Sprites {\n  back_default: string;\n  back_female: string;\n  back_shiny: string;\n  back_shiny_female: string;\n  front_default: string;\n  front_female: string;\n  front_shiny: string;\n  front_shiny_female: string;\n  other: {\n    dream_world: OtherSprites,\n    'official-artwork': OtherSprites\n  };\n  versions: any;\n}\n\nexport interface OtherSprites {\n  front_default: string;\n  front_female?: string;\n}\n\nexport interface Type {\n  name: string;\n  url: string;\n}\n\nexport interface TypeInfo {\n  slot: number;\n  type: Type;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "TypeInfo",
            "id": "interface-TypeInfo-9537eeeb6eb6bd549aa312f3bae74888",
            "file": "src/app/shared/model/pokemon.ts",
            "type": "interface",
            "sourceCode": "import {StatInfo} from './stat';\n\nexport interface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  sprites: Sprites;\n  stats: StatInfo[];\n  types: TypeInfo[];\n  weight: number;\n}\n\nexport interface Sprites {\n  back_default: string;\n  back_female: string;\n  back_shiny: string;\n  back_shiny_female: string;\n  front_default: string;\n  front_female: string;\n  front_shiny: string;\n  front_shiny_female: string;\n  other: {\n    dream_world: OtherSprites,\n    'official-artwork': OtherSprites\n  };\n  versions: any;\n}\n\nexport interface OtherSprites {\n  front_default: string;\n  front_female?: string;\n}\n\nexport interface Type {\n  name: string;\n  url: string;\n}\n\nexport interface TypeInfo {\n  slot: number;\n  type: Type;\n}\n",
            "properties": [
                {
                    "name": "slot",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "type",
                    "type": "Type",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PokemonService",
            "id": "injectable-PokemonService-2c6abebf257cb7e1c5719dfb2aa85263",
            "file": "src/app/services/pokemon.service.ts",
            "properties": [
                {
                    "name": "_pagination",
                    "defaultValue": "{\n    count: 0,\n    page: 0,\n    limit: 10,\n    offset: 0,\n    next: '',\n    previous: '',\n    url: ''\n  }",
                    "type": "Pagination",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "pagination",
                    "defaultValue": "this.paginationSource.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "paginationSource",
                    "defaultValue": "new BehaviorSubject<Pagination>({})",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "pokemons",
                    "defaultValue": "this.pokemonsSource.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "pokemonsSource",
                    "defaultValue": "new BehaviorSubject([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLimitOffset",
                    "args": [
                        {
                            "name": "url",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 63,
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUrl",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "",
                            "defaultValue": "this._pagination"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "",
                            "defaultValue": "this._pagination",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "previous",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "setPagination",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "Pagination"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "Pagination",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateList",
                    "args": [
                        {
                            "name": "url",
                            "type": "",
                            "defaultValue": "this.getUrl()"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "",
                            "defaultValue": "this.getUrl()",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {BehaviorSubject, forkJoin, Observable} from 'rxjs';\nimport {map, mergeMap} from 'rxjs/operators';\nimport {Page, Pagination} from '../shared/model/pagination';\nimport {Pokemon} from '../shared/model/pokemon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokemonService {\n  private _pagination: Pagination = {\n    count: 0,\n    page: 0,\n    limit: 10,\n    offset: 0,\n    next: '',\n    previous: '',\n    url: ''\n  };\n\n  private pokemonsSource = new BehaviorSubject([]);\n  pokemons = this.pokemonsSource.asObservable();\n\n  private paginationSource = new BehaviorSubject<Pagination>({});\n  pagination = this.paginationSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  updateList(url = this.getUrl()): Observable<any> {\n    return this.http.get(url)\n      .pipe(mergeMap((response) => {\n        const {next, previous, count, results} = response as any;\n        this.setPagination({next, previous, count, url});\n        const observables = results.map(pokemon => this.http.get(pokemon.url));\n        return forkJoin(...observables).pipe(map(pokemons => this.pokemonsSource.next(pokemons)));\n      }));\n  }\n\n  next(): void {\n    this.updateList(this._pagination.next).subscribe();\n  }\n\n  previous(): void {\n    this.updateList(this._pagination.previous).subscribe();\n  }\n\n  page(page): void {\n    if(isNaN(page)) return;\n    const { limit } = this._pagination;\n    this.updateList(this.getUrl({page: page - 1, limit})).subscribe();\n  }\n\n  getUrl(pagination = this._pagination): string {\n    const {page, limit} = pagination || {};\n    const offset = page * limit;\n    pagination.url = `${environment.api}/pokemon/?limit=${limit}&offset=${offset}`;\n    this.setPagination(pagination);\n    return pagination.url;\n  }\n\n  getLimitOffset(url: string): {limit?: number, offset?: number} {\n    if(!url) return {};\n    const [_, search] = url.split('?');\n    const urlParams = new URLSearchParams(search);\n    return {\n      limit: +urlParams.get('limit'),\n      offset: +urlParams.get('offset')\n    };\n  }\n\n  setPagination(pagination: Pagination): void {\n    if(!pagination) {\n      pagination = {};\n    }\n    const { limit, offset } = this.getLimitOffset(pagination.url);\n    const newPaginator = Object.assign( pagination, {\n      limit: limit || pagination.limit,\n      offset: offset || pagination.offset,\n      page: !offset ? 1 : (offset / limit) + 1\n    });\n    Object.assign(this._pagination, newPaginator);\n    this.paginationSource.next(newPaginator);\n  }\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Settings",
            "id": "class-Settings-40ba1415c19fb1e2b15d329f127f1952",
            "file": "src/app/settings.ts",
            "type": "class",
            "sourceCode": "export class Settings {\n  public static colours = {\n    normal: '#A8A77A',\n    fire: '#EE8130',\n    water: '#6390F0',\n    electric: '#F7D02C',\n    grass: '#7AC74C',\n    ice: '#96D9D6',\n    fighting: '#C22E28',\n    poison: '#A33EA1',\n    ground: '#E2BF65',\n    flying: '#A98FF3',\n    psychic: '#F95587',\n    bug: '#A6B91A',\n    rock: '#B6A136',\n    ghost: '#735797',\n    dragon: '#6F35FC',\n    dark: '#705746',\n    steel: '#B7B7CE',\n    fairy: '#D685AD'\n  };\n}\n",
            "properties": [
                {
                    "name": "colours",
                    "defaultValue": "{\n    normal: '#A8A77A',\n    fire: '#EE8130',\n    water: '#6390F0',\n    electric: '#F7D02C',\n    grass: '#7AC74C',\n    ice: '#96D9D6',\n    fighting: '#C22E28',\n    poison: '#A33EA1',\n    ground: '#E2BF65',\n    flying: '#A98FF3',\n    psychic: '#F95587',\n    bug: '#A6B91A',\n    rock: '#B6A136',\n    ghost: '#735797',\n    dragon: '#6F35FC',\n    dark: '#705746',\n    steel: '#B7B7CE',\n    fairy: '#D685AD'\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-26cee101a73a075b9c99518f645866ce",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pokemons",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "'pokemon'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\nimport {PokemonService} from './services/pokemon.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'pokemon';\n  pokemons = [];\n\n  constructor(protected service: PokemonService) {\n  }\n\n  ngOnInit(): void {\n    this.service.updateList().subscribe();\n\n    this.service.pokemons.subscribe(pokemons => {\n      this.pokemons = pokemons;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".pokelist {\n  overflow: auto;\n  height: calc(100% - 80px);\n  background-color: var(--light);\n}\n",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "service",
                        "type": "PokemonService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "PokemonService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-fluid h-100\">\n  <div class=\"row h-100\">\n    <div class=\"col-1 types-menu\"></div>\n    <div class=\"col h-100 pr-0\">\n      <div class=\"header\"></div>\n      <div class=\"pokelist p-2\">\n        <div *ngFor=\"let pokemon of pokemons\" class=\"p-1\">\n          <poke-row [data]=\"pokemon\"></poke-row>\n        </div>\n      </div>\n      <div class=\"pagination\">\n        <poke-paginator></poke-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-91c611a0a3ae0876dc6a7339574f5b10",
            "file": "src/app/shared/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "poke-card",
            "styleUrls": [],
            "styles": [
                "\n    .card {\n      /*width: 18rem;*/\n      max-width: 30em;\n      text-align: center;\n    }\n    .card img {\n      max-width: 50%;\n    }\n    .ident {\n      position: absolute;\n      left: 15px;\n      font-size: 50px;\n      line-height: 1em;\n      opacity: 0.3;\n      font-weight: bold;\n      text-shadow: 0px 0px 4px white;\n    }\n    .wrap-img {\n      min-height: 70px;\n    }\n  "
            ],
            "template": "<div class=\"card\">\n  <div class=\"card-body\">\n    <span class=\"ident\">#{{data.id}}</span>\n    <div class=\"text-center wrap-img\">\n        <img [src]=\"data.sprites.other.dream_world.front_default\" alt=\"\">\n    </div>\n    <h5 class=\"card-title mt-2\">{{data.name | titlecase}}</h5>\n    <div class=\"mb-2\">\n        <span class=\"badge badge-pill m-1\" *ngFor=\"let item of data.types\" [ngClass]=\"item.type.name\">{{item.type.name | titlecase}}</span>\n    </div>\n    <div>\n      <span class=\"alert alert-secondary d-inline-block m-1 pt-0 pb-0\">\n        <fa-icon [icon]=\"faRulerVertical\"></fa-icon>\n        {{data.height / 10}}m</span>\n      <span class=\"alert alert-secondary d-inline-block m-1 pt-0 pb-0\">\n        <fa-icon [icon]=\"faWeight\"></fa-icon>\n        {{data.weight}} kg</span>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "description": "<p>What background color to use</p>\n",
                    "line": 61,
                    "type": "any"
                },
                {
                    "name": "img",
                    "line": 67,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 64,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faRulerVertical",
                    "defaultValue": "faRulerVertical",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "faWeight",
                    "defaultValue": "faWeight",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\nimport {faRulerVertical, faWeight} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'poke-card',\n  template: `\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <span class=\"ident\">#{{data.id}}</span>\n        <div class=\"text-center wrap-img\">\n            <img [src]=\"data.sprites.other.dream_world.front_default\" alt=\"\">\n        </div>\n        <h5 class=\"card-title mt-2\">{{data.name | titlecase}}</h5>\n        <div class=\"mb-2\">\n            <span class=\"badge badge-pill m-1\" *ngFor=\"let item of data.types\" [ngClass]=\"item.type.name\">{{item.type.name | titlecase}}</span>\n        </div>\n        <div>\n          <span class=\"alert alert-secondary d-inline-block m-1 pt-0 pb-0\">\n            <fa-icon [icon]=\"faRulerVertical\"></fa-icon>\n            {{data.height / 10}}m</span>\n          <span class=\"alert alert-secondary d-inline-block m-1 pt-0 pb-0\">\n            <fa-icon [icon]=\"faWeight\"></fa-icon>\n            {{data.weight}} kg</span>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .card {\n      /*width: 18rem;*/\n      max-width: 30em;\n      text-align: center;\n    }\n    .card img {\n      max-width: 50%;\n    }\n    .ident {\n      position: absolute;\n      left: 15px;\n      font-size: 50px;\n      line-height: 1em;\n      opacity: 0.3;\n      font-weight: bold;\n      text-shadow: 0px 0px 4px white;\n    }\n    .wrap-img {\n      min-height: 70px;\n    }\n  `]\n})\nexport class CardComponent implements OnInit {\n\n  faRulerVertical = faRulerVertical;\n  faWeight = faWeight;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  data: any;\n\n  @Input()\n  name: string;\n\n  @Input()\n  img: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .card {\n      /*width: 18rem;*/\n      max-width: 30em;\n      text-align: center;\n    }\n    .card img {\n      max-width: 50%;\n    }\n    .ident {\n      position: absolute;\n      left: 15px;\n      font-size: 50px;\n      line-height: 1em;\n      opacity: 0.3;\n      font-weight: bold;\n      text-shadow: 0px 0px 4px white;\n    }\n    .wrap-img {\n      min-height: 70px;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 67
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-cbd2b5b38ab8a5f3fb58dbd6a09eef3a",
            "file": "src/app/shared/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "poke-paginator",
            "styleUrls": [],
            "styles": [
                "\n    nav {\n      margin: 0 auto;\n    }\n    .pagination li button[disabled] {\n      background-color: #eeeeee;\n    }\n    .page-link {\n      color: var(--gray-dark);\n    }\n    select.form-control {\n      outline: none;\n      box-shadow: unset;\n    }\n  "
            ],
            "template": "<div class=\"row\">\n  <div class=\"col\">\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\"><button class=\"page-link\" (click)=\"service.previous()\" [disabled]=\"!pagination.previous\">Previous</button></li>\n        <li *ngFor=\"let page of pages\" class=\"page-item\"><button class=\"page-link\" (click)=\"service.page(page)\" [disabled]=\"pagination.page === page\">{{page}}</button></li>\n        <li class=\"page-item\"><button class=\"page-link\" (click)=\"service.next()\" [disabled]=\"!pagination.next\">Next</button></li>\n      </ul>\n    </nav>\n  </div>\n\n  <div class=\"m-2 col\">\n    <select [(ngModel)]=\"limit\" class=\"form-control form-control-sm w-auto\" name=\"perpage\" id=\"perpage\">\n      <option value=\"10\">10</option>\n      <option value=\"20\">20</option>\n      <option value=\"30\">30</option>\n    </select>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_pagination",
                    "type": "Pagination",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "pages",
                    "defaultValue": "[]",
                    "type": "(number | string)[]",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "service",
                    "type": "PokemonService",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Pagination} from '../model/pagination';\nimport {PokemonService} from '../../services/pokemon.service';\n\n@Component({\n  selector: 'poke-paginator',\n  template: `\n    <div class=\"row\">\n      <div class=\"col\">\n        <nav aria-label=\"Page navigation example\">\n          <ul class=\"pagination\">\n            <li class=\"page-item\"><button class=\"page-link\" (click)=\"service.previous()\" [disabled]=\"!pagination.previous\">Previous</button></li>\n            <li *ngFor=\"let page of pages\" class=\"page-item\"><button class=\"page-link\" (click)=\"service.page(page)\" [disabled]=\"pagination.page === page\">{{page}}</button></li>\n            <li class=\"page-item\"><button class=\"page-link\" (click)=\"service.next()\" [disabled]=\"!pagination.next\">Next</button></li>\n          </ul>\n        </nav>\n      </div>\n\n      <div class=\"m-2 col\">\n        <select [(ngModel)]=\"limit\" class=\"form-control form-control-sm w-auto\" name=\"perpage\" id=\"perpage\">\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"30\">30</option>\n        </select>\n      </div>\n    </div>\n  `,\n  styles: [`\n    nav {\n      margin: 0 auto;\n    }\n    .pagination li button[disabled] {\n      background-color: #eeeeee;\n    }\n    .page-link {\n      color: var(--gray-dark);\n    }\n    select.form-control {\n      outline: none;\n      box-shadow: unset;\n    }\n  `]\n})\nexport class PaginatorComponent implements OnInit {\n  get limit(): number {\n    return this.pagination.limit;\n  }\n  set limit(limit: number) {\n    this.service.setPagination({offset: limit, limit, page: 1});\n    this.service.page(1);\n  }\n\n  pages: (number | string)[] = [];\n  private _pagination: Pagination;\n  get pagination(): Pagination {\n    return this._pagination;\n  }\n\n  set pagination(pagination: Pagination) {\n    this._pagination = pagination;\n    const { count, limit, page } = pagination;\n    if(!count) return;\n    const numPages = Math.ceil(count / limit);\n    const show = [-page + 1, '...', -2, -1, 0, 1, 2, '...', numPages - page];\n    if(page < 4) show.splice(0, 2);\n    if(page > numPages - 4) show.splice(-2);\n\n    const showPages = show.map(n => (page + +n) || n)\n      .filter(v => v === '...' || v > 0 && v <= numPages);\n\n    this.pages = showPages;\n  }\n\n  constructor(public service: PokemonService) { }\n\n  ngOnInit(): void {\n    this.service.pagination.subscribe(pagination => (this.pagination = pagination));\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    nav {\n      margin: 0 auto;\n    }\n    .pagination li button[disabled] {\n      background-color: #eeeeee;\n    }\n    .page-link {\n      color: var(--gray-dark);\n    }\n    select.form-control {\n      outline: none;\n      box-shadow: unset;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "service",
                        "type": "PokemonService"
                    }
                ],
                "line": 72,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "PokemonService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "limit": {
                    "name": "limit",
                    "setSignature": {
                        "name": "limit",
                        "type": "void",
                        "args": [
                            {
                                "name": "limit",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 48,
                        "jsdoctags": [
                            {
                                "name": "limit",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "limit",
                        "type": "number",
                        "returnType": "number",
                        "line": 45
                    }
                },
                "pagination": {
                    "name": "pagination",
                    "setSignature": {
                        "name": "pagination",
                        "type": "void",
                        "args": [
                            {
                                "name": "pagination",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "pagination",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "pagination",
                        "type": "",
                        "returnType": "Pagination",
                        "line": 55
                    }
                }
            }
        },
        {
            "name": "RowComponent",
            "id": "component-RowComponent-81a49c853551cb39fda83a40eba970c8",
            "file": "src/app/shared/row/row.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "poke-row",
            "styleUrls": [],
            "styles": [
                "\n  "
            ],
            "template": "<div class=\"row align-items-center p-1\">\n  <div class=\"col-4\">\n    <poke-card [data]=\"data\"></poke-card>\n  </div>\n  <div class=\"col\">\n    <poke-stats [stats]=\"data.stats\"></poke-stats>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "line": 21,
                    "type": "Pokemon"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Pokemon} from '../model/pokemon';\n\n@Component({\n  selector: 'poke-row',\n  template: `\n    <div class=\"row align-items-center p-1\">\n      <div class=\"col-4\">\n        <poke-card [data]=\"data\"></poke-card>\n      </div>\n      <div class=\"col\">\n        <poke-stats [stats]=\"data.stats\"></poke-stats>\n      </div>\n    </div>\n  `,\n  styles: [`\n  `]\n})\nexport class RowComponent implements OnInit {\n\n  @Input() data: Pokemon;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "StatBarComponent",
            "id": "component-StatBarComponent-fad5408d1a30c42ea50fb5b438d3a8da",
            "file": "src/app/shared/stat-bar/stat-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "poke-stat-bar",
            "styleUrls": [],
            "styles": [
                "\n    .bar {\n      background-color: #DDD;\n      border-radius: 0.25em;\n      height: 1.2em;\n      width: 100%;\n      padding: 0.2em;\n      box-sizing: border-box;\n    }\n    .stat {\n      height: 0.8em;\n      float: left;\n      border-radius: 0.25em;\n    }\n  "
            ],
            "template": "<div class=\"bar\">\n  <div class=\"stat\" [ngStyle]=\"style\"></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "limit",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "value",
                    "line": 45,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_limit",
                    "defaultValue": "200",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "style",
                    "defaultValue": "{\n    width: '10%',\n    backgroundColor: 'red'\n  }",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "calcStyle",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        },
                        {
                            "name": "limit",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                },
                {
                    "name": "perc2color",
                    "args": [
                        {
                            "name": "percent",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 74,
                    "description": "<p>Convert percent to color</p>\n",
                    "jsdoctags": [
                        {
                            "name": "percent",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'poke-stat-bar',\n  template: `\n    <div class=\"bar\">\n      <div class=\"stat\" [ngStyle]=\"style\"></div>\n    </div>\n  `,\n  styles: [`\n    .bar {\n      background-color: #DDD;\n      border-radius: 0.25em;\n      height: 1.2em;\n      width: 100%;\n      padding: 0.2em;\n      box-sizing: border-box;\n    }\n    .stat {\n      height: 0.8em;\n      float: left;\n      border-radius: 0.25em;\n    }\n  `]\n})\nexport class StatBarComponent implements OnInit {\n\n  private _limit = 200;\n  private _value: number;\n  style: {[p: string]: any} | null = {\n    width: '10%',\n    backgroundColor: 'red'\n  };\n\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n    this.style = this.calcStyle(this.value, this.limit);\n  }\n  get limit(): number {\n    return this._limit;\n  }\n\n  @Input()\n  set value(value: number) {\n    this._value = value;\n    this.style = this.calcStyle(this.value, this.limit);\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  calcStyle(value: number, limit: number): {[p: string]: any} {\n    if (!value || !limit) {\n      return {};\n    }\n\n    const percent = value > limit ? 100 : (100 / limit) * value;\n\n    return {\n      width: `${percent}%`,\n      backgroundColor: this.perc2color(percent)\n    };\n  }\n\n  /**\n   * Convert percent to color\n   */\n  perc2color(percent: number): string {\n    let red = 0;\n    let green = 0;\n    const blue = 0;\n    if (percent < 50) {\n      red = 255;\n      green = Math.round(5.1 * percent);\n    }\n    else {\n      green = 255;\n      red = Math.round(510 - 5.10 * percent);\n    }\n    const h = red * 0x10000 + green * 0x100 + blue * 0x1;\n    return '#' + ('000000' + h.toString(16)).slice(-6);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .bar {\n      background-color: #DDD;\n      border-radius: 0.25em;\n      height: 1.2em;\n      width: 100%;\n      padding: 0.2em;\n      box-sizing: border-box;\n    }\n    .stat {\n      height: 0.8em;\n      float: left;\n      border-radius: 0.25em;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 51
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "limit": {
                    "name": "limit",
                    "setSignature": {
                        "name": "limit",
                        "type": "void",
                        "args": [
                            {
                                "name": "limit",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 36,
                        "jsdoctags": [
                            {
                                "name": "limit",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "limit",
                        "type": "number",
                        "returnType": "number",
                        "line": 40
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 45,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "number",
                        "returnType": "number",
                        "line": 49
                    }
                }
            }
        },
        {
            "name": "StatsComponent",
            "id": "component-StatsComponent-1d1e31a6519691a3651917228d70f32e",
            "file": "src/app/shared/stats/stats.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "poke-stats",
            "styleUrls": [],
            "styles": [
                "\n    .val {\n      min-width: 2.5em;\n      display: inline-block;\n    }\n    .label-val {\n      min-width: 15em;\n    }\n  "
            ],
            "template": "<div>\n  <div class=\"row mb-2\" *ngFor=\"let item of stats\">\n    <div class=\"col-3 text-right label-val\">\n      <strong class=\"mr-4\">{{item.stat.name | titlecase}}</strong>\n      <span class=\"val\">{{item.base_stat}}</span>\n    </div>\n    <div class=\"col\"><poke-stat-bar [value]=\"item.base_stat\"></poke-stat-bar></div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "stats",
                    "line": 30,
                    "type": "StatInfo[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {StatInfo} from '../model/stat';\n\n@Component({\n  selector: 'poke-stats',\n  template: `\n    <div>\n      <div class=\"row mb-2\" *ngFor=\"let item of stats\">\n        <div class=\"col-3 text-right label-val\">\n          <strong class=\"mr-4\">{{item.stat.name | titlecase}}</strong>\n          <span class=\"val\">{{item.base_stat}}</span>\n        </div>\n        <div class=\"col\"><poke-stat-bar [value]=\"item.base_stat\"></poke-stat-bar></div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .val {\n      min-width: 2.5em;\n      display: inline-block;\n    }\n    .label-val {\n      min-width: 15em;\n    }\n  `]\n})\nexport class StatsComponent implements OnInit {\n\n  @Input()\n  stats: StatInfo[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .val {\n      min-width: 2.5em;\n      display: inline-block;\n    }\n    .label-val {\n      min-width: 15em;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "PaginatorComponent"
                        },
                        {
                            "name": "RowComponent"
                        },
                        {
                            "name": "StatBarComponent"
                        },
                        {
                            "name": "StatsComponent"
                        },
                        {
                            "name": "TypeColorPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Row.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/StatBar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stats.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  api: `http://pokeapi.co/api/v2`\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  api: `http://pokeapi.co/api/v2`\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Row.stories.ts",
                "type": "Story<RowComponent>",
                "defaultValue": "(args: RowComponent) => ({\n  component: RowComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/StatBar.stories.ts",
                "type": "Story<StatBarComponent>",
                "defaultValue": "(args: StatBarComponent) => ({\n  component: StatBarComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stats.stories.ts",
                "type": "Story<StatsComponent>",
                "defaultValue": "(args: StatsComponent) => ({\n  component: StatsComponent,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/Card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  component: CardComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Row.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Row.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Row.stories.ts",
                    "type": "Story<RowComponent>",
                    "defaultValue": "(args: RowComponent) => ({\n  component: RowComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/StatBar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/StatBar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/StatBar.stories.ts",
                    "type": "Story<StatBarComponent>",
                    "defaultValue": "(args: StatBarComponent) => ({\n  component: StatBarComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Stats.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stats.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stats.stories.ts",
                    "type": "Story<StatsComponent>",
                    "defaultValue": "(args: StatsComponent) => ({\n  component: StatsComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  api: `http://pokeapi.co/api/v2`\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  api: `http://pokeapi.co/api/v2`\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/pokemon.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PokemonService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Settings",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pagination.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Page",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pagination.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Pagination",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pokemon.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OtherSprites",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pokemon.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Pokemon",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pokemon.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Sprites",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pokemon.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Type",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/pokemon.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TypeInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/stat.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Stat",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/model/stat.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatInfo",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipe/type-color.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TypeColorPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/row/row.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stat-bar/stat-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatBarComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stats/stats.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Row.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Row.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/StatBar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/StatBar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stats.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stats.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}